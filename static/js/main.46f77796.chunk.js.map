{"version":3,"sources":["api/api.ts","api/posts.ts","components/Loader/Loader.tsx","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["request","endpoint","options","a","fetch","response","ok","Error","json","getPosts","userId","getPostDetails","postId","Loader","className","PostsList","onPostChange","useState","posts","setPosts","isLoading","setLoading","useEffect","newPosts","length","map","post","title","id","type","onClick","getPostComments","deleteComment","commentId","method","addComment","comment","body","JSON","stringify","headers","NewCommentForm","onUpdateComments","name","setName","email","setEmail","setBody","addNewComment","event","preventDefault","newComment","onSubmit","value","placeholder","onChange","target","required","PostDetails","setPost","comments","setComments","showComments","setShowComments","updateComments","newComments","postPromise","newPost","handeDelete","getUsers","App","users","setUsers","setUserId","setPostId","newUsers","htmlFor","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46f77796.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const request = async <T>(endpoint: string, options?: RequestInit): Promise<T> => {\n  const response = await fetch(`${BASE_URL}${endpoint}`, options);\n\n  if (!response.ok) {\n    throw new Error('Some problems with fetch');\n  }\n\n  return response.json();\n};\n","import { request } from './api';\n\nexport const getPosts = async (userId?: number): Promise<Post[]> => {\n  if (userId) {\n    return request(`posts?userId=${userId}`);\n  }\n\n  return request('posts');\n};\n\nexport const getPostDetails = async (postId: number): Promise<Post> => {\n  return request(`posts/${postId}`);\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPosts } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport './PostsList.scss';\n\ntype Props = {\n  userId: number,\n  onPostChange: (postId: number) => void,\n  postId: number,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  userId,\n  onPostChange,\n  postId,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const newPosts = await getPosts(userId);\n\n      setPosts(newPosts);\n      setLoading(false);\n    })();\n  }, [userId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      {!posts.length ? (\n        <p>No posts</p>\n      ) : (\n        <ul className=\"PostsList__list\">\n          {posts.map(post => (\n            <li\n              key={post.id}\n              className=\"PostsList__item\"\n            >\n              <div>\n                <b>{`[User #${post.userId}]: `}</b>\n                {post.title}\n              </div>\n\n              {postId === post.id ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => onPostChange(0)}\n                >\n                  Close\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => onPostChange(post.id)}\n                >\n                  Open\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = async (postId: number): Promise<PostComment[]> => {\n  return request(`comments?postId=${postId}`);\n};\n\nexport const deleteComment = async (commentId: number) => {\n  return request(`comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const addComment = async (comment: Omit<PostComment, 'id'>) => {\n  return request('comments', {\n    method: 'POST',\n    body: JSON.stringify(comment),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n};\n","import React, { FormEvent, useState } from 'react';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number,\n  onUpdateComments: () => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, onUpdateComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const clearForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  const addNewComment = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newComment: Omit<PostComment, 'id'> = {\n      name,\n      email,\n      body,\n      postId,\n    };\n\n    clearForm();\n    await addComment(newComment);\n    await onUpdateComments();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={addNewComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setName(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setEmail(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={body}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setBody(event.target.value)}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { deleteComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<PostComment[]>([]);\n  const [showComments, setShowComments] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const updateComments = async () => {\n    const newComments = await getPostComments(postId);\n\n    setComments(newComments);\n  };\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const postPromise = getPostDetails(postId);\n\n      await updateComments();\n      const newPost = await postPromise;\n\n      setPost(newPost);\n      setLoading(false);\n    })();\n  }, [postId]);\n\n  const handeDelete = async (commentId: number) => {\n    await deleteComment(commentId);\n    await updateComments();\n  };\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p className=\"PostDetails__title\">{post?.title}</p>\n      </section>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      {comments.length ? (\n        <section className=\"PostDetails__comments\">\n          {showComments ? (\n            <>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setShowComments(false)}\n              >\n                {`Hide ${comments.length} comment${comments.length > 1 ? 's' : ''}`}\n              </button>\n\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={comment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => handeDelete(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            </>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setShowComments(true)}\n            >\n              {`Show ${comments.length} comment${comments.length > 1 ? 's' : ''}`}\n            </button>\n          )}\n        </section>\n      ) : (\n        <p className=\"PostDetails__comments\">No comments</p>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} onUpdateComments={updateComments} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUsers = async (): Promise<User[]> => {\n  return request('users');\n};\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const newUsers = await getUsers();\n\n      setUsers(newUsers);\n    })();\n  }, []);\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setPostId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"userSelect\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            id=\"userSelect\"\n            value={userId}\n            onChange={handleChange}\n          >\n            <option value={0}>All users</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            onPostChange={setPostId}\n            postId={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId ? (\n            <PostDetails postId={postId} />\n          ) : (\n            <p>No selected post</p>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}